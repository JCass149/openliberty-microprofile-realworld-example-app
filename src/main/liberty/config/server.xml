<server description="Sample Liberty server">

	<featureManager>
		<feature>jpa-2.2</feature>
		<feature>jsf-2.3</feature>
		
		<feature>cdi-2.0</feature>
		<feature>mpConfig-2.0</feature>
		<feature>mpRestClient-2.0</feature>
		<feature>mpJwt-1.2</feature>
		<feature>mpOpenAPI-2.0</feature>
	</featureManager>

	<variable name="default.http.port" defaultValue="9080" />
	<variable name="default.https.port" defaultValue="9443" />
	<variable name="mp.jwt.verify.issuer" value="http://openliberty.io" />


	<httpEndpoint host="*" httpPort="${default.http.port}"
		httpsPort="${default.https.port}" id="defaultHttpEndpoint" />

	<webApplication location="realworld-example-app.war"
		contextRoot="/" />

	<!-- Derby Library Configuration -->
	<library id="derbyJDBCLib">
		<file name="${shared.resource.dir}/derby-${derby.version}.jar" />
	</library>

	<!-- Datasource Configuration -->
	<dataSource id="eventjpadatasource" jndiName="jdbc/eventjpadatasource">
		<jdbcDriver libraryRef="derbyJDBCLib" />
		<properties.derby.embedded databaseName="User" createDatabase="create" />
	</dataSource>

	<!-- This JWT builder is used to build a JWT for an authenticated user. 
		JWTs generated by this builder contains the user name of the authenticated 
		user. -->
	<jwtBuilder id="jwtBuilder" issuer="${mp.jwt.verify.issuer}" expiry="24h" />

	<!-- The MP JWT configuration that injects the caller's JWT into a ResourceScoped bean for inspection. -->
	<mpJwt id="jwtUserConsumer" issuer="${mp.jwt.verify.issuer}" authorizationHeaderScheme="Token" />
	
	<!-- Allows for optionally authenticated endpoints -->
	<trustAssociation invokeForUnprotectedURI="true" />

	<!-- Trust what is configured as the JDK default -->
	<ssl id="defaultSSLConfig" keyStoreRef="defaultKeyStore" trustDefaultCerts="true" />

	<!-- This is the keystore that will be used by SSL and by JWT. -->
	<!--keyStore id="defaultKeyStore" location="key.p12" type="PKCS12" password="realworld_password" -->
	<keyStore id="defaultKeyStore" password="realworldPassword" />

</server>
